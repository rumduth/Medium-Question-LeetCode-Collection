/**
 * @param {string} s
 * @return {string[]}
 */
var restoreIpAddresses = function(s) {
    let res = []
    let sequence = [];

    function backtrack(i){
        if(sequence.length === 4 && i === s.length){
            res.push(sequence.join('.'));
            return;
        }
        if(sequence.length >= 4)
            return;

        for(let length = 1; length <= 3; length++){
            if(i + length > s.length)
                return;
            let number = s.slice(i,i+length);
            if(length === 2 && (number < 10 || number >= 100))
                continue;
            if(length === 3 && (number < 100 || number > 255))
                continue;
            sequence.push(number);
            backtrack(i+length);
            sequence.pop();
        }
    }

    backtrack(0);
    return res;
};





/**
 * @param {string} s
 * @return {string[]}
 */
var restoreIpAddresses = function(s) {
    if(s.length < 4)
        return [];

    let memo = {};
    let n = s.length;

    function helper(i){
        if(i in memo)
            return memo[i];
        if(i === 0){
            memo[0] = [[s[0]]];
            return memo[0];
        }
        if(i === 1){
            memo[1] = [[s[0],s[1]]];
            let number = s.slice(0,2) * 1;
            if(number >= 10 && number <= 99)
                memo[1].push([number]);
            return memo[1];
        }
        if(i === 2){
            memo[2] = [[s[0],s[1],s[2]]];
            let number = s.slice(0,2) * 1;
            if(number >= 10 && number <= 99)
                memo[2].push([number,s[2]]);
            number = s.slice(1,3) * 1;
            if(number >= 10 && number <= 99)
                memo[2].push([s[0],number]);
            number = s.slice(0,3) * 1;
            if(number >= 100 && number <= 255)
                memo[2].push([number]);
            return memo[2];
        }

        memo[i] = [];
        for(let length = 1; length <= 3; length++){
            if(i - length < 0)
                continue;
            let prevSeq = helper(i-length);
            if(prevSeq.length === 0)
                continue;
            if(length === 1){
                for(let seq of prevSeq){
                    if(seq.length <= 3)
                        memo[i].push([...seq,s[i]]);
                }
            }
            if(length === 2){
                let number = s.slice(i-1,i+1) * 1;
                if(number >= 10 && number <= 99){
                    for(let seq of prevSeq){
                        if(seq.length <= 3)
                            memo[i].push([...seq,number]);
                    }
                }
            }
            if(length === 3){
                let number = s.slice(i-2,i+1) * 1;
                if(number >= 100 && number <= 255){
                    for(let seq of prevSeq){
                        if(seq.length <= 3)
                            memo[i].push([...seq,number]);
                    }
                }
            }
        }

        return memo[i];
    }

    let res = helper(n-1).filter(el => el.length === 4).map(el => el.join("."));
    return res;
};
