/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} l1
 * @param {ListNode} l2
 * @return {ListNode}
 */
var addTwoNumbers = function(l1, l2) {
    function add1(l, r){
        if(!l){
            if(r) return new ListNode(r);
            return null;
        }
        l.val += r;
        r = Math.floor(l.val / 10);
        l.val = l.val % 10;
        l.next = add1(l.next,r);
        return l;
    }

    function add2(l1,l2,r){
        if(!l1 && !l2){
            if(r) return new ListNode(r);
            return null;
        }
        if(!l1)
            return add1(l2,r);
        if(!l2)
            return add1(l1,r);
        let s = l1.val + l2.val + r;
        r = Math.floor(s / 10);
        val = s % 10;
        let root = new ListNode(val);
        root.next = add2(l1.next,l2.next,r);
        return root;
    }
    return add2(l1,l2,0);
};
