import {
  TreeNode,
} from '/opt/node/lib/lintcode/index.js';

/**
 * Definition of TreeNode:
 * class TreeNode {
 *   constructor(val, left=null, right=null) {
 *     this.val = val;
 *     this.left = left;
 *     this.right = right;
 *   }
 * }
 */

export class Solution {
  /**
   * @param root: the given tree
   * @return: the number of uni-value subtrees.
   */
  countUnivalSubtrees(root) {
    // write your code here
    let res = 0
    function helper(root){
        if(!root)
            return [true, -1];
        if(root.left == null && root.right == null){
            res += 1
            return [true, root.val]
        }
        let [isUniLeft, leftVal] = helper(root.left)
        let [isUniRight, rightVal] = helper(root.right)
        if(isUniLeft && isUniRight){
            if(root.val == leftVal && root.val == rightVal){
                res += 1
                return [true, root.val]
            }else if(leftVal == -1){
                if(root.val == rightVal){
                    res += 1
                    return [true, root.val]
                }
            }else if(rightVal == -1){
                if(root.val == leftVal){
                    res += 1
                    return [true, root.val]
                }
            }
        }
        return [false, 0]
    }

    helper(root);

    return res
  }
}
