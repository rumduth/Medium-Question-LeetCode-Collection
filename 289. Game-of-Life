class Solution:
    def gameOfLife(self, board: List[List[int]]) -> None:
        """
        Do not return anything, modify board in-place instead.
        """
        # States:
        # Live -> Dead: 1
        # Live -> Live: 2
        # Dead -> Live: 3
        # Dead -> Dead: 0

        m = len(board)
        n = len(board[0])
        dir = [-1,0,1]

        def helper(r,c):
            liveNeighbor = 0
            for i in dir:
                for j in dir:
                    if i == j and i == 0:
                        continue
                    nextR = r + i
                    nextC = c + j
                    if nextR < 0 or nextR >= m or nextC < 0 or nextC >= n:
                        continue
                    if board[nextR][nextC] == 0 or board[nextR][nextC] == 3:
                        continue
                    liveNeighbor += 1
            if board[r][c] == 1:
                if liveNeighbor >= 2 and liveNeighbor <= 3:
                    board[r][c] = 2
                else:
                    board[r][c] = 1
            else:
                if liveNeighbor == 3:
                    board[r][c] = 3
            
        for i in range(m):
            for j in range(n):
                helper(i,j)

        for i in range(m):
            for j in range(n):
                if board[i][j] == 0 or board[i][j] == 1:
                    board[i][j] = 0
                else:
                    board[i][j] = 1
                    
