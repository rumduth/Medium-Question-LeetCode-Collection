class Solution {
public:
    int divide(int dividend, int divisor) {
        int sign = (dividend > 0) ^ (divisor > 0) ? -1 : 1;
        long long absDividend = abs(static_cast<long long>(dividend));
        long long absDivisor = abs(static_cast<long long>(divisor));
        long long res = 0;
        while(absDividend >= absDivisor){
            int cnt = 0;
            while(absDividend - (absDivisor << (cnt + 1)) >= 0) cnt++;
            res += 1ll << cnt;
            if(sign == 1){
                if(res >= INT_MAX)
                    return INT_MAX;
            }else{
                if(res + INT_MIN >= 0)
                    return INT_MIN;
            }
            absDividend -= absDivisor << cnt;
        }
        return res * sign;
    }
};
