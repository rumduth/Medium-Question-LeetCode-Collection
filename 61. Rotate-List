/**
 * Definition for singly-linked list.
 * function ListNode(val, next) {
 *     this.val = (val===undefined ? 0 : val)
 *     this.next = (next===undefined ? null : next)
 * }
 */
/**
 * @param {ListNode} head
 * @param {number} k
 * @return {ListNode}
 */
var rotateRight = function(head, k) {
    function getLength(h){
        if(h === null)
            return 0;
        return 1 + getLength(h.next);
    }
    let length = getLength(head);

    let dummy = new ListNode();
    dummy.next = head;
    let fastNode = dummy;
    let slowNode = dummy;
    k = k % length;
    for(let i = 0; i < k; i++) fastNode = fastNode.next;
    while(fastNode.next){
        fastNode = fastNode.next;
        slowNode = slowNode.next;
    }
    fastNode.next = head;
    let res = slowNode.next;
    slowNode.next = null;
    return res;
};
