# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def pathSum(self, root: Optional[TreeNode], targetSum: int) -> List[List[int]]:
        res = []
        sequence = []
        def helper(root, currentSum):
            if not root:
                return
            currentSum += root.val
            sequence.append(root.val)
            if not root.left and not root.right and currentSum == targetSum:
                res.append(sequence[:])
        
            helper(root.left,currentSum)
            helper(root.right,currentSum)
            sequence.pop()
        
        helper(root,0)
        return res
