"""
# Definition for a Node.
class Node:
    def __init__(self, val = 0, neighbors = None):
        self.val = val
        self.neighbors = neighbors if neighbors is not None else []
"""

from typing import Optional
class Solution:
    def cloneGraph(self, node: Optional['Node']) -> Optional['Node']:
        hash_map = {}
        if not node:
            return node

        def helper(node):
            if node in hash_map:
                return hash_map[node]
            copyNode = Node(node.val)
            hash_map[node] = copyNode
            for neighbor in node.neighbors:
                copyNode.neighbors.append(helper(neighbor))

            return copyNode 
        
        return helper(node)
        
