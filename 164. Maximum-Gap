/**
 * @param {number[]} nums
 * @return {number}
 */
var maximumGap = function(nums) {
    let n = nums.length;
    if(n === 1)
        return 0;
    let maxVal = Math.max(...nums);
    let minVal = Math.min(...nums);

    let bucketSize = Math.max(Math.floor((maxVal - minVal) / (n - 1)), 1);
    let bucketCount = Math.floor((maxVal - minVal) / bucketSize) + 1;
    let buckets = Array.from({length: bucketCount}, () => [Infinity, -Infinity]);
    for(let num of nums){
        let i = Math.floor((num - minVal) / bucketSize);
        buckets[i][0] = Math.min(buckets[i][0],num);
        buckets[i][1] = Math.max(buckets[i][1],num);
    }
    let gap = 0;
    let prevMax = minVal;
    for(let i = 0; i < bucketCount; i++){
        if(buckets[i][0] === Infinity)
            continue;
        gap = Math.max(buckets[i][0] - prevMax,gap);
        prevMax = buckets[i][1];
    }
    return gap;

};
