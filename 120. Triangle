class Solution:
    def minimumTotal(self, triangle: List[List[int]]) -> int:
        m = len(triangle)
        n = len(triangle[m-1])
        dp = [[0 for _ in range(n)] for _ in range(m)]
        dp[0][0] = triangle[0][0]
        for i in range(1,m):
            for j in range(0,i+1):
                if j == 0:
                    dp[i][j] = dp[i-1][j] + triangle[i][j]
                elif j == i:
                    dp[i][j] = triangle[i][j] + dp[i-1][j-1]
                else:
                    dp[i][j] = triangle[i][j] + min(dp[i-1][j],dp[i-1][j-1])
        res = dp[m-1][0]
        for col in range(1,n):
            res = min(res, dp[m-1][col])
        return res;




/**
 * @param {number[][]} triangle
 * @return {number}
 */
var minimumTotal = function(triangle) {
    let m = triangle.length;
    let dp = new Array(m).fill(0);
    for(let i = 0; i < m; i++){
        for(let j = i; j >= 0; j--){
            if(j == 0)
                dp[j] += triangle[i][j];
            else if(j === i)
                dp[j] += dp[j-1] + triangle[i][j]
            else
                dp[j] = triangle[i][j] + Math.min(dp[j],dp[j-1]);
        }
    }
    return Math.min(...dp);
};
