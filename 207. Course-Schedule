class Solution:
    def canFinish(self, numCourses: int, prerequisites: List[List[int]]) -> bool:
        graph = {i: [] for i in range(numCourses)}
        degree = [0] * numCourses
        for a,b in prerequisites:
            graph[b].append(a)
            degree[a] += 1
        
        queue = deque([])
        for i in range(numCourses):
            if degree[i] == 0:
                queue.append(i)
        
        count = 0 
        while queue:
            course = queue.popleft()
            count += 1
            for nextCourse in graph[course]:
                degree[nextCourse] -= 1
                if degree[nextCourse] == 0:
                    queue.append(nextCourse)
        
        return count == numCourses
        

        
