class Solution {
public:
    /**
     * @param str: a string
     * @return: return a string
     */
    string reverseWords(string &str) {
        // write your code here
        string res = "";
        int i = 0;
        int j = str.length() - 1;
        while(true){
            int i = j;
            while(i >= 0  && str[i] != ' ')
                i--;
            string word = str.substr(i+1,j - i);
            res = res + word + " ";
            j = i-1;
            if (j < 0)
                break;
        }
        res.pop_back();
        return res;
    }
};



class Solution {
public:
    /**
     * @param str: a string
     * @return: return a string
     */
    string reverseWords(string &str) {
        // write your code here
        for(int start = 0, end = 0; end < str.length(); end += 1){
            if(str[end] == ' '){
                reverse(str,start,end-1);
                start = end + 1;
            }else if(end == str.length() - 1){
                reverse(str,start,end);
            }
        }
        reverse(str,0,str.length()- 1);

        return str;
    }

    void reverse(string& str, int left, int right){
        while(left < right)
            swap(str[left++],str[right--]);
    }
};
